version: '3.5'
services:
    web:
        image: nginx:alpine
        container_name: s_web
        volumes:
            - "./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./docker/ssl:/etc/ssl"
            - "./:/var/www/symfony/:cached"
            - "./docker/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
        ports:
            - "8085:80"
            - "3000:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - db
    php:
        build:
          context: ./
          target: s_php
        container_name: s_php
        restart: always
        env_file:
          - .env.local
        environment:
          XDEBUG_CONFIG: >
            idekey=PHPSTORM
            client_host=xdebug.lan
            remote_log=/tmp/xdebug.log
          PHP_IDE_CONFIG: serverName=user_auth_php
          WAIT_HOSTS: mysql:3306
          WAIT_HOSTS_TIMEOUT: 300
          WAIT_SLEEP_INTERVAL: 30
          WAIT_HOST_CONNECT_TIMEOUT: 30
        extra_hosts:
            - "xdebug.lan:${HOST_IP}"
        volumes:
            - "./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./:/var/www/symfony/:cached"
        expose:
            - '9003'
    myadmin:
        image: phpmyadmin/phpmyadmin
        container_name: s_phpmyadmin
        ports:
            - "8080:80"
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=${POSTGRES_HOST}
        restart: always
        depends_on:
            - db
    db:
      image: postgres:12-alpine
      container_name: s_postgres
      environment:
        - POSTGRES_HOST=${POSTGRES_HOST}
        - POSTGRES_DB=subscriptions
        - POSTGRES_PASSWORD=root
        - POSTGRES_USER=root
      volumes:
        - db-data:/var/lib/postgresql/data:rw
        # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
        # - ./api/docker/db/data:/var/lib/postgresql/data:rw
      ports:
        - target: 5432
          published: 5432
          protocol: tcp

volumes:
  db-data: {}
